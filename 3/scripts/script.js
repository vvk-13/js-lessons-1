// Задача 1

/*let a = 0;
while (a <= 100){	
		if ( (a % 2 == 0) || ( a % 3 == 0) || (a % 5 == 0) || ( a % 7 == 0) ) {
		a++;
	} else {
		console.log(a);
		a++
	}
}*/
/*let a = 0;
	function simpleNum(a) {
		if (a <= 1){ 
			return false;
		} else {
			let floor = Math.floor( Math.sqrt(a) );
			for (let i = 0; i < floor; i++) {
				if ( a % i == 0) {
					return false;
					i++;
				} else {
					return true;
					i++;
				}				
			}
		}
	}
	
	while (a <= 100){
		if (simpleNum(a)){
			console.log(a);
		} else {
			a++;
	 	}
	}

В твоем случае указывая делители ты уже заранее определил четыре простых числа ( 2, 3, 5 и 7), это условие хорошо
сработает на промежутке до 100. А если задача будет стоять на большем промежутке? Подход к решению следующий (на что стоит обратить внимание):

1/Все простые числа лучше заносить в массив который затем будет отображен

2/Делитель каждого нового числа ищем среди этого массива (любое составное число состоит из n-ого 
количества произведений простых чисел напр. 12=223), если найден хоть один делитель (число 1 в 
качестве делителя не рассматриваем) то переходим к анализу следующего числа в промежутке. Если 
же делители не найдены то это число добавляем к массиву простых чисел (метод push()).

3/Из отбора исключаем все четные числа, т.к. они имею как минимум один делитель (2). То есть по 
промежутку можно передвигаться с шагом 2 (в цикле использовать a+=2 вместо a++)
Этого будет достаточно. Успехов вам в работе.)


*/

// Задача 2
let b = 0;
do {
	if ( b == 0 ){
	console.log( b, "- ноль" );
	b++
} else if ( b % 2 == 0) {
	console.log( b, "- четное");
	b++
} else {
	console.log( b, "- нечетное")
	b++
}} while ( b <= 10);

// Задача 3
let c;
for (c = 0; c < 10; console.log(c++) );

//Задача 4
str = '';
for (let i = 0; i <= 20; i++){
	str += 'x';
	console.log(str);
}

//Задача 5
let purchases = [1, 4, 5];
function countPurchases(purchases) {
	let sum = 0;
	for (let i = 0; i < purchases.length; i++) {
		sum += purchases[i];
	}
	return sum;
}
console.log( countPurchases(purchases) );